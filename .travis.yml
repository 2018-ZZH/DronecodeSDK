language: cpp

matrix:
  fast_finish: true
  include:
    - os: linux
      dist: trusty
      sudo: false
      compiler: gcc
      env:
      - BUILD_TARGET=trusty_build
    - os: linux
      dist: trusty
      sudo: false
      compiler: gcc
      env:
      - BUILD_TARGET=trusty_build
      - GCC_VERSION=5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
    - os: linux
      dist: trusty
      sudo: false
      compiler: gcc
      env:
      - BUILD_TARGET=trusty_build
      - GCC_VERSION=6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
    - os: linux
      dist: trusty
      sudo: false
      env: BUILD_TARGET=trusty_build
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-precise-3.6
          packages:
            - libc++1
            - libc++-dev
            - clang-3.6
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=docker_build
    - os: osx
      osx_image: xcode8
      env: BUILD_TARGET=mac_build

addons:
  apt:
    packages:
    - libcurl4-openssl-dev

install:
- set -e
- if [[ "${BUILD_TARGET}" = "trusty_build" ]]; then
    mkdir -p ~/bin;
    wget -O ~/bin/astyle https://github.com/PX4/astyle/releases/download/2.05.1/astyle-linux;
    chmod +x ~/bin/astyle;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build" ]]; then
    pip install --user awscli;
    $(aws ecr get-login --region eu-central-1);
    docker pull ${DOCKER_REPO};
  fi
- if [[ $GCC_VERSION -eq 5 ]]; then
    export CXX=g++-5 CC=gcc-5;
  fi
- if [[ $GCC_VERSION -eq 6 ]]; then
    export CXX=g++-6 CC=gcc-6;
  fi

script:
- if [[ "${BUILD_TARGET}" = "trusty_build" ]]; then
    make;
    make run_unit_tests;
    make fix_style;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build" ]]; then
    docker run -it -v $TRAVIS_BUILD_DIR:/home/docker1000/src/DroneLink:rw ${DOCKER_REPO} make;
    docker run -it -v $TRAVIS_BUILD_DIR:/home/docker1000/src/DroneLink:rw ${DOCKER_REPO} make run_unit_tests;
    docker run -it -v $TRAVIS_BUILD_DIR:/home/docker1000/src/DroneLink:rw ${DOCKER_REPO} make fix_style;
  fi
- if [[ "${BUILD_TARGET}" = "mac_build" ]]; then
    make;
    make run_unit_tests;
  fi
